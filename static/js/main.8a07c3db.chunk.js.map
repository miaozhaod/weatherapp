{"version":3,"sources":["components/Temperature/Temperature.jsx","components/Divider/Divider.jsx","app/Current/Components/City/City.jsx","app/Current/Components/Meta/Meta.jsx","app/Current/Components/WeatherType/WeatherType.jsx","app/Current/Components/Realtime/Realtime.jsx","app/Current/Current.jsx","app/Forecast/Components/Day/Day.jsx","app/Forecast/Components/WeatherType/WeatherType.jsx","app/Forecast/Forecast.jsx","app/Cities/Components/City/City.jsx","app/Cities/Cities.jsx","assets/beijing.jpeg","assets/brisbane.jpeg","assets/hobart.jpeg","assets/london.jpeg","app/api/GetWeather.js","app/App.jsx","index.js"],"names":["Temperature","font","children","className","Divider","City","Meta","title","unit","WeatherType","Realtime","realtime","Current","current","city","timezone","useState","temperature","setTemperature","weatherType","setWeatherType","humidity","setHumidity","wind","setWind","setRealtime","useEffect","clock","setInterval","Date","toLocaleString","hour12","timeZone","clearInterval","temp","weather_type","wind_speed","Day","icon","src","alt","Forecast","filteredForecastData","forecast","slice","map","item","dt","weather_icon","toFixed","dayNumber","getDay","dayString","toString","index","type","value","Cities","updateCity","onClick","onChange","myCities","brisbane","latitude","longitude","background","hobart","beijing","london","getWeather","a","location","myTimezone","currentData","forecastData","Axios","url","params","appid","lat","lon","exclude","units","then","response","data","daily","weather","neededDataForCurrent","main","push","forEach","day","neededDataForForecast","backgoundImage","App","setCity","realBackground","setRealBackground","setTimezone","setCurrent","setForecast","console","log","style","backgroundImage","event","preventDefault","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a07c3db.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Temperature({ font, children }) {\n  return (\n    <span className={font}>\n      {children}\n      <sup>&#8451;</sup>\n    </span>\n  );\n}\n","import React from \"react\";\n\nexport default function Divider() {\n  return <div className=\"border-solid border-l mx-4\"></div>;\n}\n","import React from \"react\";\n\nexport default function City({ children }) {\n  return <h1 className=\"uppercase text-3xl\">{children}</h1>;\n}\n","import React from \"react\";\n\nexport default function Meta({ title, children, unit }) {\n  return (\n    <div className=\"flex flex-col items-center\">\n      <span className=\"uppercase\">{title}</span>\n      <span>\n        {children}\n        <sup className=\"uppercase\">{unit}</sup>\n      </span>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function WeatherType({ children }) {\n  return (\n    <span className=\"uppercase flex flex-col items-center mt-2 mb-5 lg:mb-10 text-xl\">\n      {children}\n    </span>\n  );\n}\n","import React from \"react\";\n\nexport default function Realtime({ realtime }) {\n  return <h3 className=\"text-xl pt-1\">{realtime}</h3>;\n}\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Temperature, Divider } from \"components\";\nimport { City, Realtime, Meta, WeatherType } from \"./Components\";\n\nexport default function Current({ current, city, timezone }) {\n  const [temperature, setTemperature] = useState();\n  const [weatherType, setWeatherType] = useState();\n  const [humidity, setHumidity] = useState();\n  const [wind, setWind] = useState();\n  const [realtime, setRealtime] = useState();\n\n  useEffect(() => {\n    const clock = setInterval(() =>\n      setRealtime(\n        new Date().toLocaleString(\"en-AU\", {\n          hour12: false,\n          timeZone: timezone,\n        }),\n        1000\n      )\n    );\n    return () => clearInterval(clock);\n  }, [timezone]);\n\n  useEffect(() => {\n    const { temp, weather_type, humidity, wind_speed } = current[0];\n\n    setTemperature(temp);\n    setWeatherType(weather_type);\n    setHumidity(humidity);\n    setWind(wind_speed);\n  }, [current]);\n\n  return (\n    <section className=\"w-full px-11 py-9 flex flex-col items-center lg:flex-row-reverse lg:items-start justify-between bg-black bg-opacity-50 text-white font-medium\">\n      <div className=\"flex flex-col items-center lg:items-end\">\n        <City>{city}</City>\n        <Realtime realtime={realtime} />\n      </div>\n      <div className=\"flex flex-col items-center mt-5 lg:mt-0\">\n        <Temperature font=\"text-6xl font-medium\"> {temperature} </Temperature>\n        <WeatherType>{weatherType}</WeatherType>\n        <div className=\"flex\">\n          <Meta title=\"humidity\" unit=\"%\">\n            {humidity}\n          </Meta>\n          <Divider />\n          <Meta title=\"wind\" unit=\"km/h\">\n            {wind}\n          </Meta>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React from \"react\";\n\nexport default function Day({ children }) {\n  return <h4 className=\"uppercase font-medium lg:font-medium\">{children}</h4>;\n}\n","import React from \"react\";\n\nexport default function WeatherType({ children, icon }) {\n  return (\n    <div className=\"uppercase flex flex-col items-center\">\n      <img src={icon} alt={children} className=\"w-10 lg:w-20\" />\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Day from \"./Components/Day\";\nimport { Temperature } from \"components\";\nimport WeatherType from \"./Components/WeatherType\";\n\nexport default function Forecast({ forecast }) {\n  const fiveDaysForecastData = forecast.slice(1, 6);\n\n  const filteredForecastData = fiveDaysForecastData.map((item) => {\n    const { dt, temp, weather_type, weather_icon } = item;\n\n    const temperature = temp.toFixed(0);\n    const weatherType = weather_type;\n    const icon = weather_icon;\n\n    const dayNumber = new Date(dt).getDay();\n    const weekArray = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n    const dayString = weekArray.slice(dayNumber, dayNumber + 1).toString();\n\n    return { dayString, temperature, weatherType, icon };\n  });\n\n  return (\n    <section className=\"w-full flex px-6 lg:px-11 py-9 bg-white\">\n      <ul className=\"flex w-full justify-between\">\n        {filteredForecastData.map((item, index) => {\n          const { dayString, temperature, weatherType, icon } = item;\n          return (\n            <li\n              className=\"flex flex-col items-center text-xs lg:text-base\"\n              key={index}\n            >\n              <Day>{dayString}</Day>\n              <Temperature font=\"mt-1 lg:font-medium\">\n                {temperature}\n              </Temperature>\n              <WeatherType icon={icon}> {weatherType} </WeatherType>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n}\n","import React from \"react\";\n\nexport default function City({ children }) {\n  return (\n    <button className=\"font-light capitalize\" type=\"submit\" value={children}>\n      {children}\n    </button>\n  );\n}\n","import React from \"react\";\nimport Divider from \"components/Divider\";\nimport { City } from \"./Components\";\n\nexport default function Cities({ updateCity }) {\n  return (\n    <>\n      <header className=\"flex w-full justify-between px-11 py-9 bg-white\">\n        <div className=\"font-medium\">My Cities</div>\n        <form className=\"hidden lg:flex flex-row \" onClick={updateCity}>\n          <City>brisbane</City>\n          <Divider />\n          <City>hobart</City>\n          <Divider />\n          <City>beijing</City>\n          <Divider />\n          <City>london</City>\n        </form>\n        <div className=\"lg:hidden\">\n          <select onChange={updateCity} className=\"font-light\">\n            <option value=\"brisbane\">Brisbane</option>\n            <option value=\"hobart\">Hobart</option>\n            <option value=\"beijing\">beijing</option>\n            <option value=\"london\">London</option>\n          </select>\n        </div>\n      </header>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/beijing.4579f083.jpeg\";","export default __webpack_public_path__ + \"static/media/brisbane.b7833125.jpeg\";","export default __webpack_public_path__ + \"static/media/hobart.d87313d5.jpeg\";","export default __webpack_public_path__ + \"static/media/london.735fb935.jpeg\";","import Axios from \"axios\";\nimport beijing from \"assets/beijing.jpeg\";\nimport brisbane from \"assets/brisbane.jpeg\";\nimport hobart from \"assets/hobart.jpeg\";\nimport london from \"assets/london.jpeg\";\n\nconst openWeatherApiKey = \"ed9e830cd51367c6b723e424ffae8a7d\";\nconst openWeatherBaseUrl = \"https://api.openweathermap.org/data/2.5/onecall\";\n\nconst myCities = {\n  brisbane: {\n    latitude: -27.4679,\n    longitude: 153.0281,\n    background: brisbane,\n  },\n  hobart: {\n    latitude: -42.8794,\n    longitude: 147.3294,\n    background: hobart,\n  },\n  beijing: {\n    latitude: 39.9075,\n    longitude: 116.3972,\n    background: beijing,\n  },\n  london: {\n    latitude: 51.5085,\n    longitude: -0.1257,\n    background: london,\n  },\n};\n\nconst getWeather = async ({ location }) => {\n  const { latitude, longitude } = myCities[location];\n  let myTimezone = \"\";\n  const currentData = [];\n  const forecastData = [];\n\n  await Axios({\n    url: openWeatherBaseUrl,\n    params: {\n      appid: openWeatherApiKey,\n      lat: latitude,\n      lon: longitude,\n      exclude: \"minutely,hourly,alerts\",\n      units: \"metric\",\n    },\n  }).then((response) => {\n    const { timezone, current, daily } = response.data;\n\n    // get timezone\n    myTimezone = myTimezone + timezone;\n\n    // get current weather data\n    const { temp, weather, humidity, wind_speed } = current;\n    const neededDataForCurrent = {\n      temp: temp.toFixed(0),\n      weather_type: weather[0].main,\n      humidity: humidity,\n      wind_speed: wind_speed.toFixed(1) * 10,\n    };\n    currentData.push(neededDataForCurrent);\n\n    // get forecast weather data\n    daily.forEach((day) => {\n      const { dt, temp, weather } = day;\n      const neededDataForForecast = {\n        dt: dt * 1000,\n        temp: temp.day,\n        weather_type: weather[0].main,\n        weather_icon: `http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`,\n      };\n      forecastData.push(neededDataForForecast);\n    });\n  });\n  return {\n    backgoundImage: myCities[location].background,\n    myTimezone,\n    currentData,\n    forecastData,\n  };\n};\n\nexport default getWeather;\n","import { useEffect, useState } from \"react\";\nimport Current from \"./Current\";\nimport Forecast from \"./Forecast\";\nimport Cities from \"./Cities\";\nimport getWeather from \"./api/GetWeather\";\n\nfunction App() {\n  const [city, setCity] = useState(\"brisbane\");\n  const [realBackground, setRealBackground] = useState();\n  const [timezone, setTimezone] = useState();\n  const [current, setCurrent] = useState();\n  const [forecast, setForecast] = useState();\n\n  const updateCity = (event) => {\n    event.preventDefault();\n    setCity(event.target.value);\n  };\n\n  useEffect(() => {\n    getWeather({ location: city }).then((response) => {\n      setRealBackground(response.backgoundImage);\n      setTimezone(response.myTimezone);\n      setCurrent(response.currentData);\n      setForecast(response.forecastData);\n    });\n  }, [city]);\n  console.log(realBackground);\n\n  return (\n    <div\n      className=\"flex flex-col justify-center items-center min-h-screen w-screen bg-center bg-cover\"\n      style={{ backgroundImage: `url(${realBackground})` }}\n    >\n      <div className=\"relative z-10 flex flex-col justify-between items-center overflow-hidden w-portrait lg:w-landscape sm:rounded-3xl shadow-2xl\">\n        <Cities updateCity={updateCity} />\n        {current && (\n          <Current current={current} city={city} timezone={timezone} />\n        )}\n        {forecast && <Forecast forecast={forecast} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import App from \"app/App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}